Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression DISJUNCTION expression
Rule 2     expression -> expression CONJUNCTION expression
Rule 3     expression -> NEGATION expression
Rule 4     expression -> expression LESS_THAN expression
Rule 5     expression -> expression LESS_THAN_EQUAL expression
Rule 6     expression -> expression NOT_EQUAL expression
Rule 7     expression -> expression GREATER_THAN expression
Rule 8     expression -> expression GREATER_THAN_EQUAL expression
Rule 9     expression -> expression EQUAL expression
Rule 10    expression -> expression CONS expression
Rule 11    expression -> expression MEMBERSHIP expression
Rule 12    expression -> expression ADDITION expression
Rule 13    expression -> expression SUBTRACTION expression
Rule 14    expression -> expression MULTIPLICATION expression
Rule 15    expression -> expression DIVISION expression
Rule 16    expression -> expression INTEGER_DIVISION expression
Rule 17    expression -> expression EXPONENTIATION expression
Rule 18    expression -> expression MODULUS expression
Rule 19    expression -> SUBTRACTION expression
Rule 20    arguments -> expression
Rule 21    arguments -> expression COMMA arguments
Rule 22    expression -> expression LEFT_BRACKET expression RIGHT_BRACKET
Rule 23    expression -> LEFT_BRACKET arguments RIGHT_BRACKET
Rule 24    args -> expression COMMA
Rule 25    args -> expression COMMA args
Rule 26    expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
Rule 27    expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS
Rule 28    expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
Rule 29    expression -> REAL
Rule 30    expression -> INTEGER
Rule 31    expression -> STRING
Rule 32    expression -> TRUE
Rule 33    expression -> FALSE

Terminals, with rules where they appear

ADDITION             : 12
COMMA                : 21 24 25
CONJUNCTION          : 2
CONS                 : 10
DISJUNCTION          : 1
DIVISION             : 15
EQUAL                : 9
EXPONENTIATION       : 17
FALSE                : 33
GREATER_THAN         : 7
GREATER_THAN_EQUAL   : 8
INTEGER              : 30
INTEGER_DIVISION     : 16
LEFT_BRACKET         : 22 23
LEFT_PARENTHESIS     : 26 27 28
LESS_THAN            : 4
LESS_THAN_EQUAL      : 5
MEMBERSHIP           : 11
MODULUS              : 18
MULTIPLICATION       : 14
NEGATION             : 3
NOT_EQUAL            : 6
REAL                 : 29
RIGHT_BRACKET        : 22 23
RIGHT_PARENTHESIS    : 26 27 28
STRING               : 31
SUBTRACTION          : 13 19
TRUE                 : 32
TUPLE_INDEX          : 26
error                : 

Nonterminals, with rules where they appear

args                 : 25 26 27
arguments            : 21 23
expression           : 1 1 2 2 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 20 21 22 22 24 25 26 28 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     shift and go to state 12
    CONJUNCTION     shift and go to state 13
    LESS_THAN       shift and go to state 14
    LESS_THAN_EQUAL shift and go to state 15
    NOT_EQUAL       shift and go to state 16
    GREATER_THAN    shift and go to state 17
    GREATER_THAN_EQUAL shift and go to state 18
    EQUAL           shift and go to state 19
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    LEFT_BRACKET    shift and go to state 29


state 2

    (3) expression -> NEGATION . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 30

state 3

    (19) expression -> SUBTRACTION . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 31

state 4

    (23) expression -> LEFT_BRACKET . arguments RIGHT_BRACKET
    (20) arguments -> . expression
    (21) arguments -> . expression COMMA arguments
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    arguments                      shift and go to state 32
    expression                     shift and go to state 33

state 5

    (26) expression -> TUPLE_INDEX . expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 34

state 6

    (27) expression -> LEFT_PARENTHESIS . args RIGHT_PARENTHESIS
    (28) expression -> LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS
    (24) args -> . expression COMMA
    (25) args -> . expression COMMA args
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    args                           shift and go to state 35
    expression                     shift and go to state 36

state 7

    (29) expression -> REAL .

    DISJUNCTION     reduce using rule 29 (expression -> REAL .)
    CONJUNCTION     reduce using rule 29 (expression -> REAL .)
    LESS_THAN       reduce using rule 29 (expression -> REAL .)
    LESS_THAN_EQUAL reduce using rule 29 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 29 (expression -> REAL .)
    GREATER_THAN    reduce using rule 29 (expression -> REAL .)
    GREATER_THAN_EQUAL reduce using rule 29 (expression -> REAL .)
    EQUAL           reduce using rule 29 (expression -> REAL .)
    CONS            reduce using rule 29 (expression -> REAL .)
    MEMBERSHIP      reduce using rule 29 (expression -> REAL .)
    ADDITION        reduce using rule 29 (expression -> REAL .)
    SUBTRACTION     reduce using rule 29 (expression -> REAL .)
    MULTIPLICATION  reduce using rule 29 (expression -> REAL .)
    DIVISION        reduce using rule 29 (expression -> REAL .)
    INTEGER_DIVISION reduce using rule 29 (expression -> REAL .)
    EXPONENTIATION  reduce using rule 29 (expression -> REAL .)
    MODULUS         reduce using rule 29 (expression -> REAL .)
    LEFT_BRACKET    reduce using rule 29 (expression -> REAL .)
    $end            reduce using rule 29 (expression -> REAL .)
    COMMA           reduce using rule 29 (expression -> REAL .)
    RIGHT_BRACKET   reduce using rule 29 (expression -> REAL .)
    LEFT_PARENTHESIS reduce using rule 29 (expression -> REAL .)
    RIGHT_PARENTHESIS reduce using rule 29 (expression -> REAL .)


state 8

    (30) expression -> INTEGER .

    DISJUNCTION     reduce using rule 30 (expression -> INTEGER .)
    CONJUNCTION     reduce using rule 30 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 30 (expression -> INTEGER .)
    LESS_THAN_EQUAL reduce using rule 30 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 30 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 30 (expression -> INTEGER .)
    GREATER_THAN_EQUAL reduce using rule 30 (expression -> INTEGER .)
    EQUAL           reduce using rule 30 (expression -> INTEGER .)
    CONS            reduce using rule 30 (expression -> INTEGER .)
    MEMBERSHIP      reduce using rule 30 (expression -> INTEGER .)
    ADDITION        reduce using rule 30 (expression -> INTEGER .)
    SUBTRACTION     reduce using rule 30 (expression -> INTEGER .)
    MULTIPLICATION  reduce using rule 30 (expression -> INTEGER .)
    DIVISION        reduce using rule 30 (expression -> INTEGER .)
    INTEGER_DIVISION reduce using rule 30 (expression -> INTEGER .)
    EXPONENTIATION  reduce using rule 30 (expression -> INTEGER .)
    MODULUS         reduce using rule 30 (expression -> INTEGER .)
    LEFT_BRACKET    reduce using rule 30 (expression -> INTEGER .)
    $end            reduce using rule 30 (expression -> INTEGER .)
    COMMA           reduce using rule 30 (expression -> INTEGER .)
    RIGHT_BRACKET   reduce using rule 30 (expression -> INTEGER .)
    LEFT_PARENTHESIS reduce using rule 30 (expression -> INTEGER .)
    RIGHT_PARENTHESIS reduce using rule 30 (expression -> INTEGER .)


state 9

    (31) expression -> STRING .

    DISJUNCTION     reduce using rule 31 (expression -> STRING .)
    CONJUNCTION     reduce using rule 31 (expression -> STRING .)
    LESS_THAN       reduce using rule 31 (expression -> STRING .)
    LESS_THAN_EQUAL reduce using rule 31 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 31 (expression -> STRING .)
    GREATER_THAN    reduce using rule 31 (expression -> STRING .)
    GREATER_THAN_EQUAL reduce using rule 31 (expression -> STRING .)
    EQUAL           reduce using rule 31 (expression -> STRING .)
    CONS            reduce using rule 31 (expression -> STRING .)
    MEMBERSHIP      reduce using rule 31 (expression -> STRING .)
    ADDITION        reduce using rule 31 (expression -> STRING .)
    SUBTRACTION     reduce using rule 31 (expression -> STRING .)
    MULTIPLICATION  reduce using rule 31 (expression -> STRING .)
    DIVISION        reduce using rule 31 (expression -> STRING .)
    INTEGER_DIVISION reduce using rule 31 (expression -> STRING .)
    EXPONENTIATION  reduce using rule 31 (expression -> STRING .)
    MODULUS         reduce using rule 31 (expression -> STRING .)
    LEFT_BRACKET    reduce using rule 31 (expression -> STRING .)
    $end            reduce using rule 31 (expression -> STRING .)
    COMMA           reduce using rule 31 (expression -> STRING .)
    RIGHT_BRACKET   reduce using rule 31 (expression -> STRING .)
    LEFT_PARENTHESIS reduce using rule 31 (expression -> STRING .)
    RIGHT_PARENTHESIS reduce using rule 31 (expression -> STRING .)


state 10

    (32) expression -> TRUE .

    DISJUNCTION     reduce using rule 32 (expression -> TRUE .)
    CONJUNCTION     reduce using rule 32 (expression -> TRUE .)
    LESS_THAN       reduce using rule 32 (expression -> TRUE .)
    LESS_THAN_EQUAL reduce using rule 32 (expression -> TRUE .)
    NOT_EQUAL       reduce using rule 32 (expression -> TRUE .)
    GREATER_THAN    reduce using rule 32 (expression -> TRUE .)
    GREATER_THAN_EQUAL reduce using rule 32 (expression -> TRUE .)
    EQUAL           reduce using rule 32 (expression -> TRUE .)
    CONS            reduce using rule 32 (expression -> TRUE .)
    MEMBERSHIP      reduce using rule 32 (expression -> TRUE .)
    ADDITION        reduce using rule 32 (expression -> TRUE .)
    SUBTRACTION     reduce using rule 32 (expression -> TRUE .)
    MULTIPLICATION  reduce using rule 32 (expression -> TRUE .)
    DIVISION        reduce using rule 32 (expression -> TRUE .)
    INTEGER_DIVISION reduce using rule 32 (expression -> TRUE .)
    EXPONENTIATION  reduce using rule 32 (expression -> TRUE .)
    MODULUS         reduce using rule 32 (expression -> TRUE .)
    LEFT_BRACKET    reduce using rule 32 (expression -> TRUE .)
    $end            reduce using rule 32 (expression -> TRUE .)
    COMMA           reduce using rule 32 (expression -> TRUE .)
    RIGHT_BRACKET   reduce using rule 32 (expression -> TRUE .)
    LEFT_PARENTHESIS reduce using rule 32 (expression -> TRUE .)
    RIGHT_PARENTHESIS reduce using rule 32 (expression -> TRUE .)


state 11

    (33) expression -> FALSE .

    DISJUNCTION     reduce using rule 33 (expression -> FALSE .)
    CONJUNCTION     reduce using rule 33 (expression -> FALSE .)
    LESS_THAN       reduce using rule 33 (expression -> FALSE .)
    LESS_THAN_EQUAL reduce using rule 33 (expression -> FALSE .)
    NOT_EQUAL       reduce using rule 33 (expression -> FALSE .)
    GREATER_THAN    reduce using rule 33 (expression -> FALSE .)
    GREATER_THAN_EQUAL reduce using rule 33 (expression -> FALSE .)
    EQUAL           reduce using rule 33 (expression -> FALSE .)
    CONS            reduce using rule 33 (expression -> FALSE .)
    MEMBERSHIP      reduce using rule 33 (expression -> FALSE .)
    ADDITION        reduce using rule 33 (expression -> FALSE .)
    SUBTRACTION     reduce using rule 33 (expression -> FALSE .)
    MULTIPLICATION  reduce using rule 33 (expression -> FALSE .)
    DIVISION        reduce using rule 33 (expression -> FALSE .)
    INTEGER_DIVISION reduce using rule 33 (expression -> FALSE .)
    EXPONENTIATION  reduce using rule 33 (expression -> FALSE .)
    MODULUS         reduce using rule 33 (expression -> FALSE .)
    LEFT_BRACKET    reduce using rule 33 (expression -> FALSE .)
    $end            reduce using rule 33 (expression -> FALSE .)
    COMMA           reduce using rule 33 (expression -> FALSE .)
    RIGHT_BRACKET   reduce using rule 33 (expression -> FALSE .)
    LEFT_PARENTHESIS reduce using rule 33 (expression -> FALSE .)
    RIGHT_PARENTHESIS reduce using rule 33 (expression -> FALSE .)


state 12

    (1) expression -> expression DISJUNCTION . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 37

state 13

    (2) expression -> expression CONJUNCTION . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 38

state 14

    (4) expression -> expression LESS_THAN . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 39

state 15

    (5) expression -> expression LESS_THAN_EQUAL . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 40

state 16

    (6) expression -> expression NOT_EQUAL . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 41

state 17

    (7) expression -> expression GREATER_THAN . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 42

state 18

    (8) expression -> expression GREATER_THAN_EQUAL . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 43

state 19

    (9) expression -> expression EQUAL . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 44

state 20

    (10) expression -> expression CONS . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 45

state 21

    (11) expression -> expression MEMBERSHIP . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 46

state 22

    (12) expression -> expression ADDITION . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 47

state 23

    (13) expression -> expression SUBTRACTION . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 48

state 24

    (14) expression -> expression MULTIPLICATION . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 49

state 25

    (15) expression -> expression DIVISION . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 50

state 26

    (16) expression -> expression INTEGER_DIVISION . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 51

state 27

    (17) expression -> expression EXPONENTIATION . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 52

state 28

    (18) expression -> expression MODULUS . expression
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 53

state 29

    (22) expression -> expression LEFT_BRACKET . expression RIGHT_BRACKET
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 54

state 30

    (3) expression -> NEGATION expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 3 (expression -> NEGATION expression .)
    CONJUNCTION     reduce using rule 3 (expression -> NEGATION expression .)
    LEFT_BRACKET    reduce using rule 3 (expression -> NEGATION expression .)
    $end            reduce using rule 3 (expression -> NEGATION expression .)
    COMMA           reduce using rule 3 (expression -> NEGATION expression .)
    RIGHT_BRACKET   reduce using rule 3 (expression -> NEGATION expression .)
    LEFT_PARENTHESIS reduce using rule 3 (expression -> NEGATION expression .)
    RIGHT_PARENTHESIS reduce using rule 3 (expression -> NEGATION expression .)
    LESS_THAN       shift and go to state 14
    LESS_THAN_EQUAL shift and go to state 15
    NOT_EQUAL       shift and go to state 16
    GREATER_THAN    shift and go to state 17
    GREATER_THAN_EQUAL shift and go to state 18
    EQUAL           shift and go to state 19
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! LESS_THAN       [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! NOT_EQUAL       [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! GREATER_THAN    [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! EQUAL           [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! CONS            [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! MEMBERSHIP      [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! ADDITION        [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! SUBTRACTION     [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! MULTIPLICATION  [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! DIVISION        [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! MODULUS         [ reduce using rule 3 (expression -> NEGATION expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 31

    (19) expression -> SUBTRACTION expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 19 (expression -> SUBTRACTION expression .)
    CONJUNCTION     reduce using rule 19 (expression -> SUBTRACTION expression .)
    LESS_THAN       reduce using rule 19 (expression -> SUBTRACTION expression .)
    LESS_THAN_EQUAL reduce using rule 19 (expression -> SUBTRACTION expression .)
    NOT_EQUAL       reduce using rule 19 (expression -> SUBTRACTION expression .)
    GREATER_THAN    reduce using rule 19 (expression -> SUBTRACTION expression .)
    GREATER_THAN_EQUAL reduce using rule 19 (expression -> SUBTRACTION expression .)
    EQUAL           reduce using rule 19 (expression -> SUBTRACTION expression .)
    CONS            reduce using rule 19 (expression -> SUBTRACTION expression .)
    MEMBERSHIP      reduce using rule 19 (expression -> SUBTRACTION expression .)
    ADDITION        reduce using rule 19 (expression -> SUBTRACTION expression .)
    SUBTRACTION     reduce using rule 19 (expression -> SUBTRACTION expression .)
    MULTIPLICATION  reduce using rule 19 (expression -> SUBTRACTION expression .)
    DIVISION        reduce using rule 19 (expression -> SUBTRACTION expression .)
    INTEGER_DIVISION reduce using rule 19 (expression -> SUBTRACTION expression .)
    EXPONENTIATION  reduce using rule 19 (expression -> SUBTRACTION expression .)
    MODULUS         reduce using rule 19 (expression -> SUBTRACTION expression .)
    LEFT_BRACKET    reduce using rule 19 (expression -> SUBTRACTION expression .)
    $end            reduce using rule 19 (expression -> SUBTRACTION expression .)
    COMMA           reduce using rule 19 (expression -> SUBTRACTION expression .)
    RIGHT_BRACKET   reduce using rule 19 (expression -> SUBTRACTION expression .)
    LEFT_PARENTHESIS reduce using rule 19 (expression -> SUBTRACTION expression .)
    RIGHT_PARENTHESIS reduce using rule 19 (expression -> SUBTRACTION expression .)

  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! CONS            [ shift and go to state 20 ]
  ! MEMBERSHIP      [ shift and go to state 21 ]
  ! ADDITION        [ shift and go to state 22 ]
  ! SUBTRACTION     [ shift and go to state 23 ]
  ! MULTIPLICATION  [ shift and go to state 24 ]
  ! DIVISION        [ shift and go to state 25 ]
  ! INTEGER_DIVISION [ shift and go to state 26 ]
  ! EXPONENTIATION  [ shift and go to state 27 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 32

    (23) expression -> LEFT_BRACKET arguments . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 55


state 33

    (20) arguments -> expression .
    (21) arguments -> expression . COMMA arguments
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    RIGHT_BRACKET   reduce using rule 20 (arguments -> expression .)
    COMMA           shift and go to state 56
    DISJUNCTION     shift and go to state 12
    CONJUNCTION     shift and go to state 13
    LESS_THAN       shift and go to state 14
    LESS_THAN_EQUAL shift and go to state 15
    NOT_EQUAL       shift and go to state 16
    GREATER_THAN    shift and go to state 17
    GREATER_THAN_EQUAL shift and go to state 18
    EQUAL           shift and go to state 19
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    LEFT_BRACKET    shift and go to state 29


state 34

    (26) expression -> TUPLE_INDEX expression . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    LEFT_PARENTHESIS shift and go to state 57
    DISJUNCTION     shift and go to state 12
    CONJUNCTION     shift and go to state 13
    LESS_THAN       shift and go to state 14
    LESS_THAN_EQUAL shift and go to state 15
    NOT_EQUAL       shift and go to state 16
    GREATER_THAN    shift and go to state 17
    GREATER_THAN_EQUAL shift and go to state 18
    EQUAL           shift and go to state 19
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    LEFT_BRACKET    shift and go to state 29


state 35

    (27) expression -> LEFT_PARENTHESIS args . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 58


state 36

    (28) expression -> LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS
    (24) args -> expression . COMMA
    (25) args -> expression . COMMA args
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    RIGHT_PARENTHESIS shift and go to state 59
    COMMA           shift and go to state 60
    DISJUNCTION     shift and go to state 12
    CONJUNCTION     shift and go to state 13
    LESS_THAN       shift and go to state 14
    LESS_THAN_EQUAL shift and go to state 15
    NOT_EQUAL       shift and go to state 16
    GREATER_THAN    shift and go to state 17
    GREATER_THAN_EQUAL shift and go to state 18
    EQUAL           shift and go to state 19
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    LEFT_BRACKET    shift and go to state 29


state 37

    (1) expression -> expression DISJUNCTION expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 1 (expression -> expression DISJUNCTION expression .)
    LEFT_BRACKET    reduce using rule 1 (expression -> expression DISJUNCTION expression .)
    $end            reduce using rule 1 (expression -> expression DISJUNCTION expression .)
    COMMA           reduce using rule 1 (expression -> expression DISJUNCTION expression .)
    RIGHT_BRACKET   reduce using rule 1 (expression -> expression DISJUNCTION expression .)
    LEFT_PARENTHESIS reduce using rule 1 (expression -> expression DISJUNCTION expression .)
    RIGHT_PARENTHESIS reduce using rule 1 (expression -> expression DISJUNCTION expression .)
    CONJUNCTION     shift and go to state 13
    LESS_THAN       shift and go to state 14
    LESS_THAN_EQUAL shift and go to state 15
    NOT_EQUAL       shift and go to state 16
    GREATER_THAN    shift and go to state 17
    GREATER_THAN_EQUAL shift and go to state 18
    EQUAL           shift and go to state 19
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! CONJUNCTION     [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! LESS_THAN       [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! NOT_EQUAL       [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! GREATER_THAN    [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! EQUAL           [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! CONS            [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! MEMBERSHIP      [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! ADDITION        [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! SUBTRACTION     [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! MULTIPLICATION  [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! DIVISION        [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! MODULUS         [ reduce using rule 1 (expression -> expression DISJUNCTION expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 38

    (2) expression -> expression CONJUNCTION expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 2 (expression -> expression CONJUNCTION expression .)
    CONJUNCTION     reduce using rule 2 (expression -> expression CONJUNCTION expression .)
    LEFT_BRACKET    reduce using rule 2 (expression -> expression CONJUNCTION expression .)
    $end            reduce using rule 2 (expression -> expression CONJUNCTION expression .)
    COMMA           reduce using rule 2 (expression -> expression CONJUNCTION expression .)
    RIGHT_BRACKET   reduce using rule 2 (expression -> expression CONJUNCTION expression .)
    LEFT_PARENTHESIS reduce using rule 2 (expression -> expression CONJUNCTION expression .)
    RIGHT_PARENTHESIS reduce using rule 2 (expression -> expression CONJUNCTION expression .)
    LESS_THAN       shift and go to state 14
    LESS_THAN_EQUAL shift and go to state 15
    NOT_EQUAL       shift and go to state 16
    GREATER_THAN    shift and go to state 17
    GREATER_THAN_EQUAL shift and go to state 18
    EQUAL           shift and go to state 19
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! LESS_THAN       [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! NOT_EQUAL       [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! GREATER_THAN    [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! EQUAL           [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! CONS            [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! MEMBERSHIP      [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! ADDITION        [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! SUBTRACTION     [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! MULTIPLICATION  [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! DIVISION        [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! MODULUS         [ reduce using rule 2 (expression -> expression CONJUNCTION expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 39

    (4) expression -> expression LESS_THAN expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 4 (expression -> expression LESS_THAN expression .)
    CONJUNCTION     reduce using rule 4 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 4 (expression -> expression LESS_THAN expression .)
    LESS_THAN_EQUAL reduce using rule 4 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 4 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 4 (expression -> expression LESS_THAN expression .)
    GREATER_THAN_EQUAL reduce using rule 4 (expression -> expression LESS_THAN expression .)
    EQUAL           reduce using rule 4 (expression -> expression LESS_THAN expression .)
    LEFT_BRACKET    reduce using rule 4 (expression -> expression LESS_THAN expression .)
    $end            reduce using rule 4 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 4 (expression -> expression LESS_THAN expression .)
    RIGHT_BRACKET   reduce using rule 4 (expression -> expression LESS_THAN expression .)
    LEFT_PARENTHESIS reduce using rule 4 (expression -> expression LESS_THAN expression .)
    RIGHT_PARENTHESIS reduce using rule 4 (expression -> expression LESS_THAN expression .)
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! CONS            [ reduce using rule 4 (expression -> expression LESS_THAN expression .) ]
  ! MEMBERSHIP      [ reduce using rule 4 (expression -> expression LESS_THAN expression .) ]
  ! ADDITION        [ reduce using rule 4 (expression -> expression LESS_THAN expression .) ]
  ! SUBTRACTION     [ reduce using rule 4 (expression -> expression LESS_THAN expression .) ]
  ! MULTIPLICATION  [ reduce using rule 4 (expression -> expression LESS_THAN expression .) ]
  ! DIVISION        [ reduce using rule 4 (expression -> expression LESS_THAN expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 4 (expression -> expression LESS_THAN expression .) ]
  ! EXPONENTIATION  [ reduce using rule 4 (expression -> expression LESS_THAN expression .) ]
  ! MODULUS         [ reduce using rule 4 (expression -> expression LESS_THAN expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 40

    (5) expression -> expression LESS_THAN_EQUAL expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    CONJUNCTION     reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    LESS_THAN       reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    NOT_EQUAL       reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    GREATER_THAN    reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    EQUAL           reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    LEFT_BRACKET    reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    $end            reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    COMMA           reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    RIGHT_BRACKET   reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    LEFT_PARENTHESIS reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    RIGHT_PARENTHESIS reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .)
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! CONS            [ reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MEMBERSHIP      [ reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! ADDITION        [ reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! SUBTRACTION     [ reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MULTIPLICATION  [ reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! DIVISION        [ reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! EXPONENTIATION  [ reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 5 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 41

    (6) expression -> expression NOT_EQUAL expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    CONJUNCTION     reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN       reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN    reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    EQUAL           reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    LEFT_BRACKET    reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    RIGHT_BRACKET   reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    LEFT_PARENTHESIS reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    RIGHT_PARENTHESIS reduce using rule 6 (expression -> expression NOT_EQUAL expression .)
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! CONS            [ reduce using rule 6 (expression -> expression NOT_EQUAL expression .) ]
  ! MEMBERSHIP      [ reduce using rule 6 (expression -> expression NOT_EQUAL expression .) ]
  ! ADDITION        [ reduce using rule 6 (expression -> expression NOT_EQUAL expression .) ]
  ! SUBTRACTION     [ reduce using rule 6 (expression -> expression NOT_EQUAL expression .) ]
  ! MULTIPLICATION  [ reduce using rule 6 (expression -> expression NOT_EQUAL expression .) ]
  ! DIVISION        [ reduce using rule 6 (expression -> expression NOT_EQUAL expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 6 (expression -> expression NOT_EQUAL expression .) ]
  ! EXPONENTIATION  [ reduce using rule 6 (expression -> expression NOT_EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 6 (expression -> expression NOT_EQUAL expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 42

    (7) expression -> expression GREATER_THAN expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    CONJUNCTION     reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    LESS_THAN       reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    LESS_THAN_EQUAL reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN_EQUAL reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    EQUAL           reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    LEFT_BRACKET    reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    COMMA           reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    RIGHT_BRACKET   reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    LEFT_PARENTHESIS reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    RIGHT_PARENTHESIS reduce using rule 7 (expression -> expression GREATER_THAN expression .)
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! CONS            [ reduce using rule 7 (expression -> expression GREATER_THAN expression .) ]
  ! MEMBERSHIP      [ reduce using rule 7 (expression -> expression GREATER_THAN expression .) ]
  ! ADDITION        [ reduce using rule 7 (expression -> expression GREATER_THAN expression .) ]
  ! SUBTRACTION     [ reduce using rule 7 (expression -> expression GREATER_THAN expression .) ]
  ! MULTIPLICATION  [ reduce using rule 7 (expression -> expression GREATER_THAN expression .) ]
  ! DIVISION        [ reduce using rule 7 (expression -> expression GREATER_THAN expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 7 (expression -> expression GREATER_THAN expression .) ]
  ! EXPONENTIATION  [ reduce using rule 7 (expression -> expression GREATER_THAN expression .) ]
  ! MODULUS         [ reduce using rule 7 (expression -> expression GREATER_THAN expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 43

    (8) expression -> expression GREATER_THAN_EQUAL expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    CONJUNCTION     reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    LESS_THAN       reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    NOT_EQUAL       reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    GREATER_THAN    reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    EQUAL           reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    LEFT_BRACKET    reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    $end            reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    COMMA           reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    RIGHT_BRACKET   reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    LEFT_PARENTHESIS reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    RIGHT_PARENTHESIS reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .)
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! CONS            [ reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MEMBERSHIP      [ reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! ADDITION        [ reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! SUBTRACTION     [ reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MULTIPLICATION  [ reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! DIVISION        [ reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! EXPONENTIATION  [ reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 8 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 44

    (9) expression -> expression EQUAL expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 9 (expression -> expression EQUAL expression .)
    CONJUNCTION     reduce using rule 9 (expression -> expression EQUAL expression .)
    LESS_THAN       reduce using rule 9 (expression -> expression EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 9 (expression -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 9 (expression -> expression EQUAL expression .)
    GREATER_THAN    reduce using rule 9 (expression -> expression EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 9 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 9 (expression -> expression EQUAL expression .)
    LEFT_BRACKET    reduce using rule 9 (expression -> expression EQUAL expression .)
    $end            reduce using rule 9 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 9 (expression -> expression EQUAL expression .)
    RIGHT_BRACKET   reduce using rule 9 (expression -> expression EQUAL expression .)
    LEFT_PARENTHESIS reduce using rule 9 (expression -> expression EQUAL expression .)
    RIGHT_PARENTHESIS reduce using rule 9 (expression -> expression EQUAL expression .)
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! CONS            [ reduce using rule 9 (expression -> expression EQUAL expression .) ]
  ! MEMBERSHIP      [ reduce using rule 9 (expression -> expression EQUAL expression .) ]
  ! ADDITION        [ reduce using rule 9 (expression -> expression EQUAL expression .) ]
  ! SUBTRACTION     [ reduce using rule 9 (expression -> expression EQUAL expression .) ]
  ! MULTIPLICATION  [ reduce using rule 9 (expression -> expression EQUAL expression .) ]
  ! DIVISION        [ reduce using rule 9 (expression -> expression EQUAL expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 9 (expression -> expression EQUAL expression .) ]
  ! EXPONENTIATION  [ reduce using rule 9 (expression -> expression EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 9 (expression -> expression EQUAL expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 45

    (10) expression -> expression CONS expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 10 (expression -> expression CONS expression .)
    CONJUNCTION     reduce using rule 10 (expression -> expression CONS expression .)
    LESS_THAN       reduce using rule 10 (expression -> expression CONS expression .)
    LESS_THAN_EQUAL reduce using rule 10 (expression -> expression CONS expression .)
    NOT_EQUAL       reduce using rule 10 (expression -> expression CONS expression .)
    GREATER_THAN    reduce using rule 10 (expression -> expression CONS expression .)
    GREATER_THAN_EQUAL reduce using rule 10 (expression -> expression CONS expression .)
    EQUAL           reduce using rule 10 (expression -> expression CONS expression .)
    LEFT_BRACKET    reduce using rule 10 (expression -> expression CONS expression .)
    $end            reduce using rule 10 (expression -> expression CONS expression .)
    COMMA           reduce using rule 10 (expression -> expression CONS expression .)
    RIGHT_BRACKET   reduce using rule 10 (expression -> expression CONS expression .)
    LEFT_PARENTHESIS reduce using rule 10 (expression -> expression CONS expression .)
    RIGHT_PARENTHESIS reduce using rule 10 (expression -> expression CONS expression .)
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! CONS            [ reduce using rule 10 (expression -> expression CONS expression .) ]
  ! MEMBERSHIP      [ reduce using rule 10 (expression -> expression CONS expression .) ]
  ! ADDITION        [ reduce using rule 10 (expression -> expression CONS expression .) ]
  ! SUBTRACTION     [ reduce using rule 10 (expression -> expression CONS expression .) ]
  ! MULTIPLICATION  [ reduce using rule 10 (expression -> expression CONS expression .) ]
  ! DIVISION        [ reduce using rule 10 (expression -> expression CONS expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 10 (expression -> expression CONS expression .) ]
  ! EXPONENTIATION  [ reduce using rule 10 (expression -> expression CONS expression .) ]
  ! MODULUS         [ reduce using rule 10 (expression -> expression CONS expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 46

    (11) expression -> expression MEMBERSHIP expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    CONJUNCTION     reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    LESS_THAN       reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    LESS_THAN_EQUAL reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    NOT_EQUAL       reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    GREATER_THAN    reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    GREATER_THAN_EQUAL reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    EQUAL           reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    CONS            reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    MEMBERSHIP      reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    LEFT_BRACKET    reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    $end            reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    COMMA           reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    RIGHT_BRACKET   reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    LEFT_PARENTHESIS reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    RIGHT_PARENTHESIS reduce using rule 11 (expression -> expression MEMBERSHIP expression .)
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! ADDITION        [ reduce using rule 11 (expression -> expression MEMBERSHIP expression .) ]
  ! SUBTRACTION     [ reduce using rule 11 (expression -> expression MEMBERSHIP expression .) ]
  ! MULTIPLICATION  [ reduce using rule 11 (expression -> expression MEMBERSHIP expression .) ]
  ! DIVISION        [ reduce using rule 11 (expression -> expression MEMBERSHIP expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 11 (expression -> expression MEMBERSHIP expression .) ]
  ! EXPONENTIATION  [ reduce using rule 11 (expression -> expression MEMBERSHIP expression .) ]
  ! MODULUS         [ reduce using rule 11 (expression -> expression MEMBERSHIP expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! CONS            [ shift and go to state 20 ]
  ! MEMBERSHIP      [ shift and go to state 21 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 47

    (12) expression -> expression ADDITION expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 12 (expression -> expression ADDITION expression .)
    CONJUNCTION     reduce using rule 12 (expression -> expression ADDITION expression .)
    LESS_THAN       reduce using rule 12 (expression -> expression ADDITION expression .)
    LESS_THAN_EQUAL reduce using rule 12 (expression -> expression ADDITION expression .)
    NOT_EQUAL       reduce using rule 12 (expression -> expression ADDITION expression .)
    GREATER_THAN    reduce using rule 12 (expression -> expression ADDITION expression .)
    GREATER_THAN_EQUAL reduce using rule 12 (expression -> expression ADDITION expression .)
    EQUAL           reduce using rule 12 (expression -> expression ADDITION expression .)
    CONS            reduce using rule 12 (expression -> expression ADDITION expression .)
    MEMBERSHIP      reduce using rule 12 (expression -> expression ADDITION expression .)
    ADDITION        reduce using rule 12 (expression -> expression ADDITION expression .)
    SUBTRACTION     reduce using rule 12 (expression -> expression ADDITION expression .)
    LEFT_BRACKET    reduce using rule 12 (expression -> expression ADDITION expression .)
    $end            reduce using rule 12 (expression -> expression ADDITION expression .)
    COMMA           reduce using rule 12 (expression -> expression ADDITION expression .)
    RIGHT_BRACKET   reduce using rule 12 (expression -> expression ADDITION expression .)
    LEFT_PARENTHESIS reduce using rule 12 (expression -> expression ADDITION expression .)
    RIGHT_PARENTHESIS reduce using rule 12 (expression -> expression ADDITION expression .)
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! MULTIPLICATION  [ reduce using rule 12 (expression -> expression ADDITION expression .) ]
  ! DIVISION        [ reduce using rule 12 (expression -> expression ADDITION expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 12 (expression -> expression ADDITION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 12 (expression -> expression ADDITION expression .) ]
  ! MODULUS         [ reduce using rule 12 (expression -> expression ADDITION expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! CONS            [ shift and go to state 20 ]
  ! MEMBERSHIP      [ shift and go to state 21 ]
  ! ADDITION        [ shift and go to state 22 ]
  ! SUBTRACTION     [ shift and go to state 23 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 48

    (13) expression -> expression SUBTRACTION expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    CONJUNCTION     reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    LESS_THAN       reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    LESS_THAN_EQUAL reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    NOT_EQUAL       reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    GREATER_THAN    reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    GREATER_THAN_EQUAL reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    EQUAL           reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    CONS            reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    MEMBERSHIP      reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    ADDITION        reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    SUBTRACTION     reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    LEFT_BRACKET    reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    $end            reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    COMMA           reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    RIGHT_BRACKET   reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    LEFT_PARENTHESIS reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    RIGHT_PARENTHESIS reduce using rule 13 (expression -> expression SUBTRACTION expression .)
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28

  ! MULTIPLICATION  [ reduce using rule 13 (expression -> expression SUBTRACTION expression .) ]
  ! DIVISION        [ reduce using rule 13 (expression -> expression SUBTRACTION expression .) ]
  ! INTEGER_DIVISION [ reduce using rule 13 (expression -> expression SUBTRACTION expression .) ]
  ! EXPONENTIATION  [ reduce using rule 13 (expression -> expression SUBTRACTION expression .) ]
  ! MODULUS         [ reduce using rule 13 (expression -> expression SUBTRACTION expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! CONS            [ shift and go to state 20 ]
  ! MEMBERSHIP      [ shift and go to state 21 ]
  ! ADDITION        [ shift and go to state 22 ]
  ! SUBTRACTION     [ shift and go to state 23 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 49

    (14) expression -> expression MULTIPLICATION expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    CONJUNCTION     reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    LESS_THAN       reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    LESS_THAN_EQUAL reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    NOT_EQUAL       reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    GREATER_THAN    reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    GREATER_THAN_EQUAL reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    EQUAL           reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    CONS            reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    MEMBERSHIP      reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    ADDITION        reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    SUBTRACTION     reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    MULTIPLICATION  reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    DIVISION        reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    INTEGER_DIVISION reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    MODULUS         reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    LEFT_BRACKET    reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    $end            reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    COMMA           reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    RIGHT_BRACKET   reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    LEFT_PARENTHESIS reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    RIGHT_PARENTHESIS reduce using rule 14 (expression -> expression MULTIPLICATION expression .)
    EXPONENTIATION  shift and go to state 27

  ! EXPONENTIATION  [ reduce using rule 14 (expression -> expression MULTIPLICATION expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! CONS            [ shift and go to state 20 ]
  ! MEMBERSHIP      [ shift and go to state 21 ]
  ! ADDITION        [ shift and go to state 22 ]
  ! SUBTRACTION     [ shift and go to state 23 ]
  ! MULTIPLICATION  [ shift and go to state 24 ]
  ! DIVISION        [ shift and go to state 25 ]
  ! INTEGER_DIVISION [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 50

    (15) expression -> expression DIVISION expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 15 (expression -> expression DIVISION expression .)
    CONJUNCTION     reduce using rule 15 (expression -> expression DIVISION expression .)
    LESS_THAN       reduce using rule 15 (expression -> expression DIVISION expression .)
    LESS_THAN_EQUAL reduce using rule 15 (expression -> expression DIVISION expression .)
    NOT_EQUAL       reduce using rule 15 (expression -> expression DIVISION expression .)
    GREATER_THAN    reduce using rule 15 (expression -> expression DIVISION expression .)
    GREATER_THAN_EQUAL reduce using rule 15 (expression -> expression DIVISION expression .)
    EQUAL           reduce using rule 15 (expression -> expression DIVISION expression .)
    CONS            reduce using rule 15 (expression -> expression DIVISION expression .)
    MEMBERSHIP      reduce using rule 15 (expression -> expression DIVISION expression .)
    ADDITION        reduce using rule 15 (expression -> expression DIVISION expression .)
    SUBTRACTION     reduce using rule 15 (expression -> expression DIVISION expression .)
    MULTIPLICATION  reduce using rule 15 (expression -> expression DIVISION expression .)
    DIVISION        reduce using rule 15 (expression -> expression DIVISION expression .)
    INTEGER_DIVISION reduce using rule 15 (expression -> expression DIVISION expression .)
    MODULUS         reduce using rule 15 (expression -> expression DIVISION expression .)
    LEFT_BRACKET    reduce using rule 15 (expression -> expression DIVISION expression .)
    $end            reduce using rule 15 (expression -> expression DIVISION expression .)
    COMMA           reduce using rule 15 (expression -> expression DIVISION expression .)
    RIGHT_BRACKET   reduce using rule 15 (expression -> expression DIVISION expression .)
    LEFT_PARENTHESIS reduce using rule 15 (expression -> expression DIVISION expression .)
    RIGHT_PARENTHESIS reduce using rule 15 (expression -> expression DIVISION expression .)
    EXPONENTIATION  shift and go to state 27

  ! EXPONENTIATION  [ reduce using rule 15 (expression -> expression DIVISION expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! CONS            [ shift and go to state 20 ]
  ! MEMBERSHIP      [ shift and go to state 21 ]
  ! ADDITION        [ shift and go to state 22 ]
  ! SUBTRACTION     [ shift and go to state 23 ]
  ! MULTIPLICATION  [ shift and go to state 24 ]
  ! DIVISION        [ shift and go to state 25 ]
  ! INTEGER_DIVISION [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 51

    (16) expression -> expression INTEGER_DIVISION expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    CONJUNCTION     reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    LESS_THAN       reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    LESS_THAN_EQUAL reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    NOT_EQUAL       reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    GREATER_THAN    reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    GREATER_THAN_EQUAL reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    EQUAL           reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    CONS            reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    MEMBERSHIP      reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    ADDITION        reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    SUBTRACTION     reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    MULTIPLICATION  reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    DIVISION        reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    INTEGER_DIVISION reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    MODULUS         reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    LEFT_BRACKET    reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    $end            reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    COMMA           reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    RIGHT_BRACKET   reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    LEFT_PARENTHESIS reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    RIGHT_PARENTHESIS reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .)
    EXPONENTIATION  shift and go to state 27

  ! EXPONENTIATION  [ reduce using rule 16 (expression -> expression INTEGER_DIVISION expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! CONS            [ shift and go to state 20 ]
  ! MEMBERSHIP      [ shift and go to state 21 ]
  ! ADDITION        [ shift and go to state 22 ]
  ! SUBTRACTION     [ shift and go to state 23 ]
  ! MULTIPLICATION  [ shift and go to state 24 ]
  ! DIVISION        [ shift and go to state 25 ]
  ! INTEGER_DIVISION [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 52

    (17) expression -> expression EXPONENTIATION expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    CONJUNCTION     reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    LESS_THAN       reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    LESS_THAN_EQUAL reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    NOT_EQUAL       reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    GREATER_THAN    reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    GREATER_THAN_EQUAL reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    EQUAL           reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    CONS            reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    MEMBERSHIP      reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    ADDITION        reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    SUBTRACTION     reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    MULTIPLICATION  reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    DIVISION        reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    INTEGER_DIVISION reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    MODULUS         reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    LEFT_BRACKET    reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    $end            reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    COMMA           reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    RIGHT_BRACKET   reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    LEFT_PARENTHESIS reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    RIGHT_PARENTHESIS reduce using rule 17 (expression -> expression EXPONENTIATION expression .)
    EXPONENTIATION  shift and go to state 27

  ! EXPONENTIATION  [ reduce using rule 17 (expression -> expression EXPONENTIATION expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! CONS            [ shift and go to state 20 ]
  ! MEMBERSHIP      [ shift and go to state 21 ]
  ! ADDITION        [ shift and go to state 22 ]
  ! SUBTRACTION     [ shift and go to state 23 ]
  ! MULTIPLICATION  [ shift and go to state 24 ]
  ! DIVISION        [ shift and go to state 25 ]
  ! INTEGER_DIVISION [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 53

    (18) expression -> expression MODULUS expression .
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    DISJUNCTION     reduce using rule 18 (expression -> expression MODULUS expression .)
    CONJUNCTION     reduce using rule 18 (expression -> expression MODULUS expression .)
    LESS_THAN       reduce using rule 18 (expression -> expression MODULUS expression .)
    LESS_THAN_EQUAL reduce using rule 18 (expression -> expression MODULUS expression .)
    NOT_EQUAL       reduce using rule 18 (expression -> expression MODULUS expression .)
    GREATER_THAN    reduce using rule 18 (expression -> expression MODULUS expression .)
    GREATER_THAN_EQUAL reduce using rule 18 (expression -> expression MODULUS expression .)
    EQUAL           reduce using rule 18 (expression -> expression MODULUS expression .)
    CONS            reduce using rule 18 (expression -> expression MODULUS expression .)
    MEMBERSHIP      reduce using rule 18 (expression -> expression MODULUS expression .)
    ADDITION        reduce using rule 18 (expression -> expression MODULUS expression .)
    SUBTRACTION     reduce using rule 18 (expression -> expression MODULUS expression .)
    MULTIPLICATION  reduce using rule 18 (expression -> expression MODULUS expression .)
    DIVISION        reduce using rule 18 (expression -> expression MODULUS expression .)
    INTEGER_DIVISION reduce using rule 18 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 18 (expression -> expression MODULUS expression .)
    LEFT_BRACKET    reduce using rule 18 (expression -> expression MODULUS expression .)
    $end            reduce using rule 18 (expression -> expression MODULUS expression .)
    COMMA           reduce using rule 18 (expression -> expression MODULUS expression .)
    RIGHT_BRACKET   reduce using rule 18 (expression -> expression MODULUS expression .)
    LEFT_PARENTHESIS reduce using rule 18 (expression -> expression MODULUS expression .)
    RIGHT_PARENTHESIS reduce using rule 18 (expression -> expression MODULUS expression .)
    EXPONENTIATION  shift and go to state 27

  ! EXPONENTIATION  [ reduce using rule 18 (expression -> expression MODULUS expression .) ]
  ! DISJUNCTION     [ shift and go to state 12 ]
  ! CONJUNCTION     [ shift and go to state 13 ]
  ! LESS_THAN       [ shift and go to state 14 ]
  ! LESS_THAN_EQUAL [ shift and go to state 15 ]
  ! NOT_EQUAL       [ shift and go to state 16 ]
  ! GREATER_THAN    [ shift and go to state 17 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 18 ]
  ! EQUAL           [ shift and go to state 19 ]
  ! CONS            [ shift and go to state 20 ]
  ! MEMBERSHIP      [ shift and go to state 21 ]
  ! ADDITION        [ shift and go to state 22 ]
  ! SUBTRACTION     [ shift and go to state 23 ]
  ! MULTIPLICATION  [ shift and go to state 24 ]
  ! DIVISION        [ shift and go to state 25 ]
  ! INTEGER_DIVISION [ shift and go to state 26 ]
  ! MODULUS         [ shift and go to state 28 ]
  ! LEFT_BRACKET    [ shift and go to state 29 ]


state 54

    (22) expression -> expression LEFT_BRACKET expression . RIGHT_BRACKET
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 61
    DISJUNCTION     shift and go to state 12
    CONJUNCTION     shift and go to state 13
    LESS_THAN       shift and go to state 14
    LESS_THAN_EQUAL shift and go to state 15
    NOT_EQUAL       shift and go to state 16
    GREATER_THAN    shift and go to state 17
    GREATER_THAN_EQUAL shift and go to state 18
    EQUAL           shift and go to state 19
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    LEFT_BRACKET    shift and go to state 29


state 55

    (23) expression -> LEFT_BRACKET arguments RIGHT_BRACKET .

    DISJUNCTION     reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    CONJUNCTION     reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    EQUAL           reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    CONS            reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    MEMBERSHIP      reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    ADDITION        reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    SUBTRACTION     reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    MULTIPLICATION  reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    DIVISION        reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    INTEGER_DIVISION reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    EXPONENTIATION  reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    MODULUS         reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    $end            reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    COMMA           reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 23 (expression -> LEFT_BRACKET arguments RIGHT_BRACKET .)


state 56

    (21) arguments -> expression COMMA . arguments
    (20) arguments -> . expression
    (21) arguments -> . expression COMMA arguments
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 33
    arguments                      shift and go to state 62

state 57

    (26) expression -> TUPLE_INDEX expression LEFT_PARENTHESIS . args RIGHT_PARENTHESIS
    (24) args -> . expression COMMA
    (25) args -> . expression COMMA args
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 63
    args                           shift and go to state 64

state 58

    (27) expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .

    DISJUNCTION     reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    CONS            reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    MEMBERSHIP      reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    ADDITION        reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    SUBTRACTION     reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    MULTIPLICATION  reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    DIVISION        reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    INTEGER_DIVISION reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    EXPONENTIATION  reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    MODULUS         reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    $end            reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 27 (expression -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)


state 59

    (28) expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    DISJUNCTION     reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    CONS            reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    MEMBERSHIP      reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    ADDITION        reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    SUBTRACTION     reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    MULTIPLICATION  reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    DIVISION        reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    INTEGER_DIVISION reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    EXPONENTIATION  reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    MODULUS         reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    $end            reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 28 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)


state 60

    (24) args -> expression COMMA .
    (25) args -> expression COMMA . args
    (24) args -> . expression COMMA
    (25) args -> . expression COMMA args
    (1) expression -> . expression DISJUNCTION expression
    (2) expression -> . expression CONJUNCTION expression
    (3) expression -> . NEGATION expression
    (4) expression -> . expression LESS_THAN expression
    (5) expression -> . expression LESS_THAN_EQUAL expression
    (6) expression -> . expression NOT_EQUAL expression
    (7) expression -> . expression GREATER_THAN expression
    (8) expression -> . expression GREATER_THAN_EQUAL expression
    (9) expression -> . expression EQUAL expression
    (10) expression -> . expression CONS expression
    (11) expression -> . expression MEMBERSHIP expression
    (12) expression -> . expression ADDITION expression
    (13) expression -> . expression SUBTRACTION expression
    (14) expression -> . expression MULTIPLICATION expression
    (15) expression -> . expression DIVISION expression
    (16) expression -> . expression INTEGER_DIVISION expression
    (17) expression -> . expression EXPONENTIATION expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . SUBTRACTION expression
    (22) expression -> . expression LEFT_BRACKET expression RIGHT_BRACKET
    (23) expression -> . LEFT_BRACKET arguments RIGHT_BRACKET
    (26) expression -> . TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (27) expression -> . LEFT_PARENTHESIS args RIGHT_PARENTHESIS
    (28) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (29) expression -> . REAL
    (30) expression -> . INTEGER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE

    RIGHT_PARENTHESIS reduce using rule 24 (args -> expression COMMA .)
    NEGATION        shift and go to state 2
    SUBTRACTION     shift and go to state 3
    LEFT_BRACKET    shift and go to state 4
    TUPLE_INDEX     shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    REAL            shift and go to state 7
    INTEGER         shift and go to state 8
    STRING          shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11

    expression                     shift and go to state 63
    args                           shift and go to state 65

state 61

    (22) expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .

    DISJUNCTION     reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    CONJUNCTION     reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    EQUAL           reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    CONS            reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    MEMBERSHIP      reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    ADDITION        reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    SUBTRACTION     reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    MULTIPLICATION  reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    DIVISION        reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    INTEGER_DIVISION reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    EXPONENTIATION  reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    MODULUS         reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    $end            reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    COMMA           reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 22 (expression -> expression LEFT_BRACKET expression RIGHT_BRACKET .)


state 62

    (21) arguments -> expression COMMA arguments .

    RIGHT_BRACKET   reduce using rule 21 (arguments -> expression COMMA arguments .)


state 63

    (24) args -> expression . COMMA
    (25) args -> expression . COMMA args
    (1) expression -> expression . DISJUNCTION expression
    (2) expression -> expression . CONJUNCTION expression
    (4) expression -> expression . LESS_THAN expression
    (5) expression -> expression . LESS_THAN_EQUAL expression
    (6) expression -> expression . NOT_EQUAL expression
    (7) expression -> expression . GREATER_THAN expression
    (8) expression -> expression . GREATER_THAN_EQUAL expression
    (9) expression -> expression . EQUAL expression
    (10) expression -> expression . CONS expression
    (11) expression -> expression . MEMBERSHIP expression
    (12) expression -> expression . ADDITION expression
    (13) expression -> expression . SUBTRACTION expression
    (14) expression -> expression . MULTIPLICATION expression
    (15) expression -> expression . DIVISION expression
    (16) expression -> expression . INTEGER_DIVISION expression
    (17) expression -> expression . EXPONENTIATION expression
    (18) expression -> expression . MODULUS expression
    (22) expression -> expression . LEFT_BRACKET expression RIGHT_BRACKET

    COMMA           shift and go to state 60
    DISJUNCTION     shift and go to state 12
    CONJUNCTION     shift and go to state 13
    LESS_THAN       shift and go to state 14
    LESS_THAN_EQUAL shift and go to state 15
    NOT_EQUAL       shift and go to state 16
    GREATER_THAN    shift and go to state 17
    GREATER_THAN_EQUAL shift and go to state 18
    EQUAL           shift and go to state 19
    CONS            shift and go to state 20
    MEMBERSHIP      shift and go to state 21
    ADDITION        shift and go to state 22
    SUBTRACTION     shift and go to state 23
    MULTIPLICATION  shift and go to state 24
    DIVISION        shift and go to state 25
    INTEGER_DIVISION shift and go to state 26
    EXPONENTIATION  shift and go to state 27
    MODULUS         shift and go to state 28
    LEFT_BRACKET    shift and go to state 29


state 64

    (26) expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 66


state 65

    (25) args -> expression COMMA args .

    RIGHT_PARENTHESIS reduce using rule 25 (args -> expression COMMA args .)


state 66

    (26) expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .

    DISJUNCTION     reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    CONS            reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    MEMBERSHIP      reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    ADDITION        reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    SUBTRACTION     reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    MULTIPLICATION  reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    DIVISION        reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    INTEGER_DIVISION reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    EXPONENTIATION  reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    MODULUS         reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    $end            reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 26 (expression -> TUPLE_INDEX expression LEFT_PARENTHESIS args RIGHT_PARENTHESIS .)

