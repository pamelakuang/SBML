
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftDISJUNCTIONleftCONJUNCTIONleftNEGATIONleftLESS_THANLESS_THAN_EQUALNOT_EQUALEQUALGREATER_THANGREATER_THAN_EQUALrightCONSleftMEMBERSHIPleftADDITIONSUBTRACTIONleftMULTIPLICATIONDIVISIONINTEGER_DIVISIONMODULUSrightUMINUSrightEXPONENTIATIONleftINDEXINGleftTUPLE_INDEXINGleftTUPLE_CREATIONleftPARENTHETICAL_EXPRESSIONADDITION ASSIGNMENT COMMA CONJUNCTION CONS DISJUNCTION DIVISION EQUAL EXPONENTIATION FUNCTION False GREATER_THAN GREATER_THAN_EQUAL INTEGER INTEGER_DIVISION LEFT_BRACE LEFT_BRACKET LEFT_PARENTHESIS LESS_THAN LESS_THAN_EQUAL MEMBERSHIP MODULUS MULTIPLICATION NEGATION NOT_EQUAL REAL RIGHT_BRACE RIGHT_BRACKET RIGHT_PARENTHESIS SEMICOLON STRING SUBTRACTION TUPLE_INDEX True VARIABLE else if print whileexpression : BLOCK\n                | functions BLOCKBLOCK : LEFT_BRACE block_item_tail RIGHT_BRACE\n            | LEFT_BRACE RIGHT_BRACEblock_item_tail : block_item_tail statement\n                    | statementstatement : FUNCTION_CALL SEMICOLONparam : VARIABLE\n            | VARIABLE COMMA paramfunctions : FUNCTION_DEF\n                | functions FUNCTION_DEFFUNCTION_DEF : FUNCTION VARIABLE LEFT_PARENTHESIS param RIGHT_PARENTHESIS ASSIGNMENT BLOCK prop SEMICOLON\n                | FUNCTION VARIABLE LEFT_PARENTHESIS RIGHT_PARENTHESIS ASSIGNMENT BLOCK prop SEMICOLONFUNCTION_CALL : VARIABLE LEFT_PARENTHESIS fun_args RIGHT_PARENTHESIS\n                    | VARIABLE LEFT_PARENTHESIS RIGHT_PARENTHESISfun_args : prop\n                | prop COMMA fun_argsprop : variable LEFT_BRACKET prop RIGHT_BRACKET\n            | variable variable : VARIABLE LEFT_BRACKET prop RIGHT_BRACKETprop : VARIABLEstatement : print LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLONprop : FUNCTION_CALLstatement : if LEFT_PARENTHESIS prop RIGHT_PARENTHESIS BLOCKstatement : if LEFT_PARENTHESIS prop RIGHT_PARENTHESIS BLOCK else BLOCKstatement : while LEFT_PARENTHESIS prop RIGHT_PARENTHESIS BLOCKstatement : VARIABLE ASSIGNMENT prop SEMICOLONstatement : VARIABLE LEFT_BRACKET prop RIGHT_BRACKET ASSIGNMENT prop SEMICOLONprop : TUPLE_INDEX prop VARIABLE %prec TUPLE_INDEXINGprop : prop DISJUNCTION propprop : prop CONJUNCTION propprop : NEGATION propprop : prop LESS_THAN propprop : prop LESS_THAN_EQUAL propprop : prop NOT_EQUAL propprop : prop GREATER_THAN propprop : prop GREATER_THAN_EQUAL propprop : prop EQUAL propprop : prop CONS propprop : prop MEMBERSHIP propprop : prop ADDITION propprop : prop SUBTRACTION propprop : prop MULTIPLICATION propprop : prop DIVISION propprop : prop INTEGER_DIVISION propprop : prop EXPONENTIATION propprop : prop MODULUS propprop : SUBTRACTION prop %prec UMINUSprop : indexing LEFT_BRACKET prop RIGHT_BRACKET %prec INDEXING\n                | indexing %prec INDEXINGindexing : STRING LEFT_BRACKET prop RIGHT_BRACKET %prec INDEXING\n                 | LIST LEFT_BRACKET prop RIGHT_BRACKET %prec INDEXINGarguments : arguments COMMA prop\n                | propLIST : LEFT_BRACKET arguments RIGHT_BRACKETprop : LISTLIST : LEFT_BRACKET RIGHT_BRACKETargs : prop\n            | prop COMMA argsprop : TUPLE_INDEX prop LEFT_PARENTHESIS args RIGHT_PARENTHESIS %prec TUPLE_INDEXINGprop : LEFT_PARENTHESIS args RIGHT_PARENTHESIS %prec TUPLE_CREATIONprop : LEFT_PARENTHESIS prop RIGHT_PARENTHESIS %prec PARENTHETICAL_EXPRESSIONprop : REALprop : INTEGERprop : STRINGprop : Trueprop : False'
    
_lr_action_items = {'LEFT_BRACE':([0,3,5,8,85,86,93,129,140,148,149,],[4,4,-10,-11,4,4,4,4,4,-13,-12,]),'FUNCTION':([0,3,5,8,148,149,],[6,6,-10,-11,-13,-12,]),'$end':([1,2,7,10,18,],[0,-1,-2,-4,-3,]),'RIGHT_BRACE':([4,9,10,11,18,19,20,87,97,124,125,145,146,],[10,18,-4,-6,-3,-5,-7,-27,-22,-24,-26,-25,-28,]),'print':([4,9,10,11,18,19,20,87,97,124,125,145,146,],[13,13,-4,-6,-3,-5,-7,-27,-22,-24,-26,-25,-28,]),'if':([4,9,10,11,18,19,20,87,97,124,125,145,146,],[14,14,-4,-6,-3,-5,-7,-27,-22,-24,-26,-25,-28,]),'while':([4,9,10,11,18,19,20,87,97,124,125,145,146,],[15,15,-4,-6,-3,-5,-7,-27,-22,-24,-26,-25,-28,]),'VARIABLE':([4,6,9,10,11,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,49,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,80,81,82,83,84,87,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,119,120,124,125,126,130,133,135,137,138,139,142,144,145,146,],[16,17,16,-4,-6,-3,-5,-7,32,32,32,32,32,32,51,32,-19,32,-21,-23,32,32,32,-50,-56,-63,-64,-65,-66,-67,-15,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-57,32,119,-32,-48,32,32,32,-27,-14,32,51,-61,-62,32,-22,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-55,32,-29,32,-24,-26,32,32,-18,-20,-49,-52,-51,32,-60,-25,-28,]),'else':([10,18,124,],[-4,-3,140,]),'TUPLE_INDEX':([10,18,21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[-4,-3,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'NEGATION':([10,18,21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[-4,-3,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'SUBTRACTION':([10,18,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,89,90,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,130,131,133,134,135,137,138,139,141,142,143,144,147,],[-4,-3,36,36,36,36,36,36,36,68,-19,36,-21,-23,36,36,36,-50,-56,-63,-64,-65,-66,-67,68,68,68,68,-15,68,68,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-57,68,36,68,68,-48,36,36,36,-14,36,-61,-62,36,68,68,68,68,68,68,68,68,68,68,-41,-42,-43,-44,-45,-46,-47,68,-55,36,68,-29,36,68,68,68,36,36,68,-18,68,-20,-49,-52,-51,68,36,68,-60,68,]),'LEFT_PARENTHESIS':([10,13,14,15,16,17,18,21,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,49,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,80,81,82,83,84,89,90,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,119,120,126,130,133,135,137,138,139,142,144,],[-4,21,22,23,26,27,-3,28,28,28,28,28,28,28,-19,28,26,-23,28,28,28,-50,-56,-63,-64,-65,-66,-67,-15,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-57,28,120,-32,-48,28,28,28,-14,28,-61,-62,28,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-55,28,-29,28,28,28,-18,-20,-49,-52,-51,28,-60,]),'REAL':([10,18,21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[-4,-3,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'INTEGER':([10,18,21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[-4,-3,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'STRING':([10,18,21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[-4,-3,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'True':([10,18,21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[-4,-3,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'False':([10,18,21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[-4,-3,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'LEFT_BRACKET':([10,16,18,21,22,23,24,25,26,28,30,31,32,34,35,36,37,38,41,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,82,83,84,90,96,116,117,120,126,130,135,138,139,142,],[-4,25,-3,31,31,31,31,31,31,31,74,31,78,31,31,31,82,83,84,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-57,31,31,31,31,31,31,-55,31,31,31,31,-20,-52,-51,31,]),'SEMICOLON':([12,30,32,33,37,38,39,40,41,42,43,46,49,56,76,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,119,133,135,137,138,139,141,143,144,147,],[20,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,87,-15,97,-57,-32,-48,-14,-61,-62,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-55,-29,-18,-20,-49,-52,-51,146,148,-60,149,]),'ASSIGNMENT':([16,53,88,92,],[24,93,126,129,]),'RIGHT_PARENTHESIS':([26,27,29,30,32,33,37,38,39,40,41,42,43,44,45,48,49,50,51,52,54,55,76,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,119,127,128,131,132,133,135,136,137,138,139,144,],[49,53,56,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,85,86,89,-15,-16,-8,92,94,95,-57,-32,-48,-14,-61,-62,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-55,-29,-17,-9,-58,-59,-18,-20,144,-49,-52,-51,-60,]),'DISJUNCTION':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[57,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,57,57,57,57,-15,57,57,-57,57,57,-32,-48,-14,-61,-62,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,57,-55,57,-29,57,57,57,57,-18,57,-20,-49,-52,-51,57,57,-60,57,]),'CONJUNCTION':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[58,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,58,58,58,58,-15,58,58,-57,58,58,-32,-48,-14,-61,-62,58,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,58,-55,58,-29,58,58,58,58,-18,58,-20,-49,-52,-51,58,58,-60,58,]),'LESS_THAN':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[59,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,59,59,59,59,-15,59,59,-57,59,59,59,-48,-14,-61,-62,59,59,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,59,-55,59,-29,59,59,59,59,-18,59,-20,-49,-52,-51,59,59,-60,59,]),'LESS_THAN_EQUAL':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[60,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,60,60,60,60,-15,60,60,-57,60,60,60,-48,-14,-61,-62,60,60,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,60,-55,60,-29,60,60,60,60,-18,60,-20,-49,-52,-51,60,60,-60,60,]),'NOT_EQUAL':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[61,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,61,61,61,61,-15,61,61,-57,61,61,61,-48,-14,-61,-62,61,61,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,61,-55,61,-29,61,61,61,61,-18,61,-20,-49,-52,-51,61,61,-60,61,]),'GREATER_THAN':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[62,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,62,62,62,62,-15,62,62,-57,62,62,62,-48,-14,-61,-62,62,62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,62,-55,62,-29,62,62,62,62,-18,62,-20,-49,-52,-51,62,62,-60,62,]),'GREATER_THAN_EQUAL':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[63,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,63,63,63,63,-15,63,63,-57,63,63,63,-48,-14,-61,-62,63,63,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,63,-55,63,-29,63,63,63,63,-18,63,-20,-49,-52,-51,63,63,-60,63,]),'EQUAL':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[64,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,64,64,64,64,-15,64,64,-57,64,64,64,-48,-14,-61,-62,64,64,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,64,-55,64,-29,64,64,64,64,-18,64,-20,-49,-52,-51,64,64,-60,64,]),'CONS':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[65,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,65,65,65,65,-15,65,65,-57,65,65,65,-48,-14,-61,-62,65,65,65,65,65,65,65,65,65,-40,-41,-42,-43,-44,-45,-46,-47,65,-55,65,-29,65,65,65,65,-18,65,-20,-49,-52,-51,65,65,-60,65,]),'MEMBERSHIP':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[66,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,66,66,66,66,-15,66,66,-57,66,66,66,-48,-14,-61,-62,66,66,66,66,66,66,66,66,66,-40,-41,-42,-43,-44,-45,-46,-47,66,-55,66,-29,66,66,66,66,-18,66,-20,-49,-52,-51,66,66,-60,66,]),'ADDITION':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[67,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,67,67,67,67,-15,67,67,-57,67,67,67,-48,-14,-61,-62,67,67,67,67,67,67,67,67,67,67,-41,-42,-43,-44,-45,-46,-47,67,-55,67,-29,67,67,67,67,-18,67,-20,-49,-52,-51,67,67,-60,67,]),'MULTIPLICATION':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[69,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,69,69,69,69,-15,69,69,-57,69,69,69,-48,-14,-61,-62,69,69,69,69,69,69,69,69,69,69,69,69,-43,-44,-45,-46,-47,69,-55,69,-29,69,69,69,69,-18,69,-20,-49,-52,-51,69,69,-60,69,]),'DIVISION':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[70,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,70,70,70,70,-15,70,70,-57,70,70,70,-48,-14,-61,-62,70,70,70,70,70,70,70,70,70,70,70,70,-43,-44,-45,-46,-47,70,-55,70,-29,70,70,70,70,-18,70,-20,-49,-52,-51,70,70,-60,70,]),'INTEGER_DIVISION':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[71,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,71,71,71,71,-15,71,71,-57,71,71,71,-48,-14,-61,-62,71,71,71,71,71,71,71,71,71,71,71,71,-43,-44,-45,-46,-47,71,-55,71,-29,71,71,71,71,-18,71,-20,-49,-52,-51,71,71,-60,71,]),'EXPONENTIATION':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[72,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,72,72,72,72,-15,72,72,-57,72,72,72,72,-14,-61,-62,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-55,72,-29,72,72,72,72,-18,72,-20,-49,-52,-51,72,72,-60,72,]),'MODULUS':([29,30,32,33,37,38,39,40,41,42,43,44,45,46,47,49,50,55,76,77,79,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,131,133,134,135,137,138,139,141,143,144,147,],[73,-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,73,73,73,73,-15,73,73,-57,73,73,73,-48,-14,-61,-62,73,73,73,73,73,73,73,73,73,73,73,73,-43,-44,-45,-46,-47,73,-55,73,-29,73,73,73,73,-18,73,-20,-49,-52,-51,73,73,-60,73,]),'RIGHT_BRACKET':([30,31,32,33,37,38,39,40,41,42,43,47,49,75,76,77,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,133,134,135,137,138,139,144,],[-19,76,-21,-23,-50,-56,-63,-64,-65,-66,-67,88,-15,116,-57,-54,-32,-48,-14,-61,-62,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,133,-55,135,-29,137,138,139,-18,-53,-20,-49,-52,-51,-60,]),'COMMA':([30,32,33,37,38,39,40,41,42,43,49,50,51,55,75,76,77,80,81,89,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,119,131,133,134,135,137,138,139,144,],[-19,-21,-23,-50,-56,-63,-64,-65,-66,-67,-15,90,91,96,117,-57,-54,-32,-48,-14,-61,-62,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-55,-29,96,-18,-53,-20,-49,-52,-51,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'BLOCK':([0,3,85,86,93,129,140,],[2,7,124,125,130,142,145,]),'functions':([0,],[3,]),'FUNCTION_DEF':([0,3,],[5,8,]),'block_item_tail':([4,],[9,]),'statement':([4,9,],[11,19,]),'FUNCTION_CALL':([4,9,21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[12,12,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'prop':([21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[29,44,45,46,47,50,55,77,79,80,81,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,121,122,123,50,131,134,131,141,143,147,]),'variable':([21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'indexing':([21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'LIST':([21,22,23,24,25,26,28,31,34,35,36,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,83,84,90,96,117,120,126,130,142,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'fun_args':([26,90,],[48,127,]),'param':([27,91,],[52,128,]),'args':([28,96,120,],[54,132,136,]),'arguments':([31,],[75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> BLOCK','expression',1,'p_expr_block_exp','sbml.py',798),
  ('expression -> functions BLOCK','expression',2,'p_expr_block_exp','sbml.py',799),
  ('BLOCK -> LEFT_BRACE block_item_tail RIGHT_BRACE','BLOCK',3,'p_expr_block','sbml.py',807),
  ('BLOCK -> LEFT_BRACE RIGHT_BRACE','BLOCK',2,'p_expr_block','sbml.py',808),
  ('block_item_tail -> block_item_tail statement','block_item_tail',2,'p_block_item_tail','sbml.py',816),
  ('block_item_tail -> statement','block_item_tail',1,'p_block_item_tail','sbml.py',817),
  ('statement -> FUNCTION_CALL SEMICOLON','statement',2,'p_expr_statement_fun_call','sbml.py',825),
  ('param -> VARIABLE','param',1,'p_expr_param','sbml.py',830),
  ('param -> VARIABLE COMMA param','param',3,'p_expr_param','sbml.py',831),
  ('functions -> FUNCTION_DEF','functions',1,'p_expr_nested_fun_def','sbml.py',839),
  ('functions -> functions FUNCTION_DEF','functions',2,'p_expr_nested_fun_def','sbml.py',840),
  ('FUNCTION_DEF -> FUNCTION VARIABLE LEFT_PARENTHESIS param RIGHT_PARENTHESIS ASSIGNMENT BLOCK prop SEMICOLON','FUNCTION_DEF',9,'p_expr_function_def','sbml.py',848),
  ('FUNCTION_DEF -> FUNCTION VARIABLE LEFT_PARENTHESIS RIGHT_PARENTHESIS ASSIGNMENT BLOCK prop SEMICOLON','FUNCTION_DEF',8,'p_expr_function_def','sbml.py',849),
  ('FUNCTION_CALL -> VARIABLE LEFT_PARENTHESIS fun_args RIGHT_PARENTHESIS','FUNCTION_CALL',4,'p_expr_function_call','sbml.py',858),
  ('FUNCTION_CALL -> VARIABLE LEFT_PARENTHESIS RIGHT_PARENTHESIS','FUNCTION_CALL',3,'p_expr_function_call','sbml.py',859),
  ('fun_args -> prop','fun_args',1,'p_expr_fun_args','sbml.py',868),
  ('fun_args -> prop COMMA fun_args','fun_args',3,'p_expr_fun_args','sbml.py',869),
  ('prop -> variable LEFT_BRACKET prop RIGHT_BRACKET','prop',4,'p_expr_nested_var_list','sbml.py',877),
  ('prop -> variable','prop',1,'p_expr_nested_var_list','sbml.py',878),
  ('variable -> VARIABLE LEFT_BRACKET prop RIGHT_BRACKET','variable',4,'p_expr_variable_list','sbml.py',886),
  ('prop -> VARIABLE','prop',1,'p_expr_variable','sbml.py',891),
  ('statement -> print LEFT_PARENTHESIS prop RIGHT_PARENTHESIS SEMICOLON','statement',5,'p_expr_print','sbml.py',896),
  ('prop -> FUNCTION_CALL','prop',1,'p_expr_prop_fun_call','sbml.py',901),
  ('statement -> if LEFT_PARENTHESIS prop RIGHT_PARENTHESIS BLOCK','statement',5,'p_expr_if_statement','sbml.py',906),
  ('statement -> if LEFT_PARENTHESIS prop RIGHT_PARENTHESIS BLOCK else BLOCK','statement',7,'p_expr_if_else_statement','sbml.py',911),
  ('statement -> while LEFT_PARENTHESIS prop RIGHT_PARENTHESIS BLOCK','statement',5,'p_expr_while_statement','sbml.py',916),
  ('statement -> VARIABLE ASSIGNMENT prop SEMICOLON','statement',4,'p_expr_assignment','sbml.py',921),
  ('statement -> VARIABLE LEFT_BRACKET prop RIGHT_BRACKET ASSIGNMENT prop SEMICOLON','statement',7,'p_expr_variable_list_assign','sbml.py',926),
  ('prop -> TUPLE_INDEX prop VARIABLE','prop',3,'p_expr_variable_tuple_indexing','sbml.py',931),
  ('prop -> prop DISJUNCTION prop','prop',3,'p_expr_disjunction','sbml.py',936),
  ('prop -> prop CONJUNCTION prop','prop',3,'p_expr_conjunction','sbml.py',941),
  ('prop -> NEGATION prop','prop',2,'p_expr_negation','sbml.py',946),
  ('prop -> prop LESS_THAN prop','prop',3,'p_expr_less_than','sbml.py',951),
  ('prop -> prop LESS_THAN_EQUAL prop','prop',3,'p_expr_less_than_equal','sbml.py',956),
  ('prop -> prop NOT_EQUAL prop','prop',3,'p_expr_not_equal','sbml.py',961),
  ('prop -> prop GREATER_THAN prop','prop',3,'p_expr_greater_than','sbml.py',966),
  ('prop -> prop GREATER_THAN_EQUAL prop','prop',3,'p_expr_greater_than_equal','sbml.py',971),
  ('prop -> prop EQUAL prop','prop',3,'p_expr_equal_to','sbml.py',976),
  ('prop -> prop CONS prop','prop',3,'p_expr_cons','sbml.py',981),
  ('prop -> prop MEMBERSHIP prop','prop',3,'p_expr_membership','sbml.py',986),
  ('prop -> prop ADDITION prop','prop',3,'p_expr_addition','sbml.py',991),
  ('prop -> prop SUBTRACTION prop','prop',3,'p_expr_subtraction','sbml.py',996),
  ('prop -> prop MULTIPLICATION prop','prop',3,'p_expr_multiplication','sbml.py',1001),
  ('prop -> prop DIVISION prop','prop',3,'p_expr_division','sbml.py',1006),
  ('prop -> prop INTEGER_DIVISION prop','prop',3,'p_expr_int_division','sbml.py',1011),
  ('prop -> prop EXPONENTIATION prop','prop',3,'p_expr_exponentiation','sbml.py',1016),
  ('prop -> prop MODULUS prop','prop',3,'p_expr_modulus','sbml.py',1021),
  ('prop -> SUBTRACTION prop','prop',2,'p_expr_uminus','sbml.py',1026),
  ('prop -> indexing LEFT_BRACKET prop RIGHT_BRACKET','prop',4,'p_expr_nested_indexing','sbml.py',1031),
  ('prop -> indexing','prop',1,'p_expr_nested_indexing','sbml.py',1032),
  ('indexing -> STRING LEFT_BRACKET prop RIGHT_BRACKET','indexing',4,'p_expr_indexing','sbml.py',1041),
  ('indexing -> LIST LEFT_BRACKET prop RIGHT_BRACKET','indexing',4,'p_expr_indexing','sbml.py',1042),
  ('arguments -> arguments COMMA prop','arguments',3,'p_arguments','sbml.py',1049),
  ('arguments -> prop','arguments',1,'p_arguments','sbml.py',1050),
  ('LIST -> LEFT_BRACKET arguments RIGHT_BRACKET','LIST',3,'p_expr_list_creation','sbml.py',1058),
  ('prop -> LIST','prop',1,'p_expr_list','sbml.py',1063),
  ('LIST -> LEFT_BRACKET RIGHT_BRACKET','LIST',2,'p_expr_empty_list','sbml.py',1068),
  ('args -> prop','args',1,'p_args','sbml.py',1073),
  ('args -> prop COMMA args','args',3,'p_args','sbml.py',1074),
  ('prop -> TUPLE_INDEX prop LEFT_PARENTHESIS args RIGHT_PARENTHESIS','prop',5,'p_expr_tuple_indexing','sbml.py',1082),
  ('prop -> LEFT_PARENTHESIS args RIGHT_PARENTHESIS','prop',3,'p_expr_tuple_creation','sbml.py',1087),
  ('prop -> LEFT_PARENTHESIS prop RIGHT_PARENTHESIS','prop',3,'p_expr_parenthetical_expression','sbml.py',1092),
  ('prop -> REAL','prop',1,'p_expr_real','sbml.py',1097),
  ('prop -> INTEGER','prop',1,'p_expr_integer','sbml.py',1102),
  ('prop -> STRING','prop',1,'p_expr_string','sbml.py',1107),
  ('prop -> True','prop',1,'p_expr_true','sbml.py',1112),
  ('prop -> False','prop',1,'p_expr_false','sbml.py',1117),
]
